services:
  bot:
    build:
      context: .
      dockerfile: ./Dockerfile
    container_name: bot
    restart: always
    env_file:
      - .env
    environment:
      - REDIS_HOST=redis
    ports:
      - ${WEBHOOK_PORT}:${WEBHOOK_PORT}
    networks:
      - app
      - monitoring
    depends_on:
      - pgbouncer
      - redis
    volumes:
      - ./bot:/usr/src/app/bot
      - ./migrations:/usr/src/app/migrations
      - ~/photos:/app/photos

  
  postgres:
    image: postgres:14-alpine
    container_name: postgres
    restart: always
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}
      - POSTGRES_DB=${DB_NAME}
      - PGDATA='/var/lib/postgresql/data/pgdata'
    networks:
      - app
    volumes:
      - postgres-data:/var/lib/postgresql/data

  pgbouncer:
    image: edoburu/pgbouncer
    container_name: pgbouncer
    restart: always
    env_file:
      - .env
    environment:
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASS}
      - DB_HOST=postgres
      - POOL_MODE=session
      - MAX_DB_CONNECTIONS=0
      - DEFAULT_POOL_SIZE=40
      - ADMIN_USERS=postgres,${DB_USER}
      - AUTH_TYPE=scram-sha-256
    ports:
      - ${DB_PORT}:${DB_PORT}
    depends_on:
      - postgres
    networks:
      - app

  redis:
    image: redis:7-alpine
    container_name: redis
    restart: always
    env_file:
      - .env
    ports:
      - ${REDIS_PORT}:${REDIS_PORT}
    environment:
      - REDIS_HOST=redis
    networks:
      - app
    volumes:
      - redis-data:/bitnami/redis/data

networks:
  app:
    driver: bridge
  monitoring:
    driver: bridge

volumes:
  postgres-data: {}
  redis-data: {}
  photos: {}